0.4.1 (?/??/2012):
------------------



0.4.0 (5/20/2012):
------------------

- Inclusion of drivers for ISO-9660, HFS+, ReiserFS, and ext2fs. Most of
  these drivers originated with rEFIt, although the HFS+ driver seems to
  have come from Oracle's VirtualBox, with some files from Apple. I hadn't
  included these drivers previously because the build process proved
  challenging. As it is, they don't work on my Mac Mini, I suspect because
  the build process with the UDK2010 development kit may not work with the
  EFI 1.x that Apple uses.

- Addition of support for drivers in the "drivers_{arch}" subdirectory of
  the main rEFInd binary directory (e.g., "drivers_x64" or "drivers_ia32").
  Drivers may continue to be placed in the "drivers" subdirectory.

- Added new feature to eject CDs (and other removable media): Press F12 to
  eject all such media. This function works only on some Macs, though (it
  relies on an Apple-specific EFI extension, and this extension isn't even
  implemented on all Macs, much less on UEFI-based PCs).

- Fixed a problem that could cause GRUB 2 to fail to read its configuration
  file when launched from rEFInd.

0.3.5 (5/15/2012):
------------------

- Removed the GRUB 2 detection "reciped" added with 0.3.2, since I've
  received reports that it's not working as intended.

- Added re-scan feature: Press the Esc key to have rEFInd re-read its 
  configuration file, tell the EFI to scan for new filesystems, and re-scan
  those filesystems for boot loaders. The main purpose is to enable
  scanning a new removable medium that you insert after launching rEFInd;
  however, it can also be used to immediately implement changes to the
  configuration file or new drivers you load from an EFI shell.

- Fixed a bug that could cause the scroll-right arrow to be replaced by the
  scroll-left arrow under some circumstances.

0.3.4 (5/9/2012):
-----------------

- Added new configuration file option: "icons_dir", which sets the name
  of the subdirectory in which icons are found. See the documentation or
  sample configuration file for a full description.

- Modified Makefile to generate rEFInd binary that includes architecture
  code -- refind_ia32.efi or refind_x64.efi, rather than the generic
  refind.efi. This is done mainly to help the install.sh script. The
  program can be named anything you like on the disk. (The generic name
  refind.efi is used on unknown architectures.)

- Improved install.sh script: Fixed bug on OS X 10.7 and enable it to be
  used after building from source code (or via new "make install" Makefile
  target).

- Improved screen redraws to produce less flicker when moving among the
  second-row tags or to the last tag on the first row.

0.3.3 (5/6/2012):
-----------------

- Improved menu navigation:
  - In graphics mode, left & right arrow keys move left & right, while up &
    down arrows move between rows.
  - Page Up and Page Down now move through chunks of visible tags (in both
    text & graphics modes), jumping from one row to another only when at
    the edge of the row. In text mode, the "rows" are broken down as in
    graphics mode, but they aren't visibly distinguished on the screen.

- Improved text-mode use: rEFInd now displays the proper number of entries
  when first started in text mode and scrolling is done sensibly when too
  many entries exist to fit on the screen.

0.3.2 (5/4/2012):
-----------------

- Added the install.sh script to install rEFInd on Linux and Mac OS X
  systems. This script must be run as root (or via sudo). It requires
  no options, but on Mac OS X, passing it the "esp" option causes it
  to install rEFInd on the computer's ESP rather than the default of the
  currently OS X boot partition. (Under Linux, the default is to install to
  the ESP.) Note that there may be some unusual cases in which this script
  will fail to work.

- Does a better job of clearing the screen when launching OSes in text
  mode.

- Added detection "recipe" for GRUB 2's BIOS Boot Partition.

- Fixed bogus detection of ESPs created by Linux's mkdosfs utility or
  Windows as  bootable partitions when "scanfor" includes BIOS scanning
  options.


0.3.1 (4/27/2012):
------------------

- Fixed bug that caused spurious "Unsupported while scanning the root
  directory" messages under some conitions on Macs.

- Modified loader scanning code to sort boot loader entries within a
  directory by modification time, so that the most recently-modified loader
  is first among those in a given directory. Thus, if you specify a
  directory name (or volume name, for loaders stored in the root directory
  of a volume) as the default_selection, the most recent of those loaders
  will be the default. This is intended to help with Linux kernel
  maintenance when using the EFI stub loader; set up this way, the most
  recent kernel copied to your kernel directory will be the default,
  obviating the need to adjust the refind.conf file when adding a new
  kernel. If you want to change the default among those in the default
  directory, you can use "touch" to adjust the modification timestamp.

- Tweaked code to find loader-specific .icns file so that it finds files
  for Linux kernels without .efi extensions. In this case, files should be
  named the same as the kernels they match, but with .icns extensions. For
  instance, bzImage-3.3.2 should have an icon called bzImage-3.3.2.icns.
  (The old code would have looked for an icon called bzImage-3.3.icns.)

- Eliminated bogus OS loader tags for filenames that end in ".icns" when
  the scan_all_linux_kernels option is set.

0.3.0 (4/22/2012):
------------------

- I'm officially upgrading this project's status from "alpha" to "beta" and
  giving it a bump from 0.2.x to 0.3.0. This doesn't reflect any major
  milestone with this version; rather, it reflects my sense that rEFInd has
  been "out there" for a while, and although I've gotten bug reports,
  they've been minor and/or have been fixed. The program still has known
  bugs, but my impression is that it is, overall, usable by ordinary users.

- Added "resolution" option to refind.conf, which enables setting the video
  resolution. To use it, pass two numeric values, as in "resolution 1024
  768" to use a 1024x768 video mode. Note that not all modes are supported.
  If you specify a non-supported video mode on a UEFI system, a message
  appears listing the supported video modes and you must then press a key
  to continue, using the default video mode (usually 800x600).
  Unfortunately, I don't know the calls to get a list of supported video
  modes on older EFI 1.x systems (including Macs), so on Macs setting an
  incorrect video mode silently fails (you keep using the default mode).
  This makes changing your video mode a hit-or-miss proposition on Macs.
  CAUTION: It's possible to set a legal video mode that your monitor can't
  handle, in which case you'll get a blank display until you boot an OS
  that resets the video mode.

- Fixed (maybe) a bug that caused rEFInd to crash when returning from an
  EFI shell or other programs on Macs, particularly when rEFInd used
  graphical mode. I'm not 100% sure this bug is squashed because I still
  don't understand the cause and I only have one Mac for testing. See
  comments in the ReinitRefitLib() function in refit/lib.c for more
  details.

- Added new refind.conf option: scan_all_linux_kernels, which causes Linux
  kernels that lack ".efi" extensions to be included in scans for EFI boot
  loaders. This may help integration with Linux distributions that don't
  give their kernels such names by default. Beware, though: It can detect
  unwanted files, such as older non-stub-loader kernels or .icns files used
  to give kernels with .efi extensions custom icons.

- Improved EFI boot loader detection on boards with Gigabyte's Hybrid EFI,
  and perhaps other EFIs with a buggy StriCmp() function. Files with both
  ".efi" and ".EFI" extensions should now be detected as boot loaders.

- Fixed a bug that caused rEFInd to fail to scan for drivers if the
  filesystem driver didn't set a volume name (that is, if the relevant
  field was set to NULL rather than even an empty string). In such
  situations, rEFInd now reports the volume name as "Unknown".

0.2.7 (4/19/2012):
------------------

- After much trial and tribulation, I've overcome a GNU-EFI limitation and
  enabled rEFInd to load EFI drivers. This feature was present in the
  original build of rEFIt but was removed in the versions that could
  compile under Linux, but now it's back -- and still being compiled under
  Linux! To use it, you should place your drivers in a convenient directory
  on the ESP (or whatever partition you use to launch rEFInd) and add a
  "scan_driver_dirs" entry to refind.conf to tell rEFInd where to look. (As
  always, you should specify the driver directory relative to the root of
  the filesystem.) Note that you can't launch drivers from another
  filesystem; they must be on the same volume that holds rEFInd. Those who
  compile from source code should note that implementing this feature
  necessitated using a more recent version of the GNU-EFI library. I'm
  currently using version 3.0p, and version 3.0i does NOT work. I don't
  know where the change occurred, but you may need to upgrade your GNU-EFI
  installation.

- Fixed bug that caused rEFInd to show up in its own menu sometimes.

- Added new refind.conf token: also_scan_dirs. When scanning volumes for
  EFI boot loaders, rEFInd always scans the root directory and every
  subdirectory of the /EFI directory, but it doesn't recurse into these
  directories. The also_scan_dirs token adds more directories to the scan
  list. It defaults to "elilo,boot", but you can set it to any directory or
  directories you like.

0.2.6 (4/14/2012):
------------------

- Added "volume" keyword to configuration file's stanza options. This
  option changes the volume from which subsequent files (specified by
  "loader" and "icon") are loaded. You pass "volume" the name/label of the
  FILESYSTEM you want to use (not the GPT partition name), or a number
  followed by a colon (e.g., "1:"). The former should reliably identify a
  filesystem, assuming the name is unique. The latter assigns numbers based
  on the order in which they're scanned, which may not be as reliable but
  should work when a volume is unnamed.

- Fixed bug in 0.2.5 that caused failure of Linux initial RAM disk
  mapping on some (but not all) systems. Affected computers include at
  least some Intel motherboards, maybe others.

0.2.5 (4/9/2012):
-----------------

- Fixed bug that caused an inability to associate initial RAM disks with
  Linux kernels stored in a volume's root directory.

- Volume badges (that override default badges) are now stored in
  .VolumeBadge.icns. Although undocumented, rEFInd formerly loaded custom
  volume badges from .VolumeIcon.icns. This carryover from rEFIt was a
  confusing name, given the next (new) feature, so I've changed and
  documented the name....

- Added ability to set a default icon for a loader stored in the root
  directory of a volume: The icon is stored in .VolumeIcon.icns. This icon
  is also used for Mac OS X volumes booted from the standard location.

- Fixed bug that caused icons to drop back to generic icons when rEFInd
  was launched in certain ways (such as from an EFI shell in rEFInd's
  directory) on certain systems.

- Fixed bug that caused "unknown disable flag" to be shown (very briefly)
  instead of "unknown hideui flag" when an improper hideui flag was set.

0.2.4 (4/5/2012):
-----------------

- Created new refind.conf entry: "showtools". This entry takes options of
  "shell", "gptsync", "about", "exit", "reboot", and "shutdown". This
  option is in some respects an affirmative version of portions of the old
  "disable" and "hideui" options; however, it enables users to specify the
  order in which these options appear on the screen. Also, the "exit"
  option is new; it terminates the program. The effect is usually to return
  to whatever tool launched it or to launch a default OS; however, this is
  somewhat unpredictable. The default therefore omits the "exit" option, as
  well as "gptsync", which has always been dangerous (but necessary on most
  MacOS/Windows dual-boot setups on Macs). As part of this reconfiguration,
  I've eliminated the "rescue Linux" option, which always seemed pointless
  to me.

- Folded "disable" and "hideui" refind.conf entries into one ("disable"),
  and reduced the number of options to six: "banner", "label",
  "singleuser", "hwtest", "arrows", and "all". ("arrows" is new and
  disables the scroll arrows when a system has too many tags to display
  simultaneously.)

- Added max_tags option to the refind.conf file, enabling users to reduce
  the maximum number of OS loader tags that can be displayed at once.

- Updated rEFIt icon, based on the 128x128 volume label from the rEFIt CD
  image.

- Added x86 and x86-64 EFI shells to the CD image version of the binary,
  but NOT to the binary zip file. The logic is that the CD image is more
  likely to be used directly as an emergency disc and so may need this
  feature, even though the source isn't part of the rEFInd project. (The
  source is readily available from the TianoCore project.)

- EFI shells may now be stored at /shellx64.efi for x86-64 systems or at
  /shellia32.efi for x86 systems. The /EFI/tools/shell.efi name is also
  recognized; however, if both files are present, two EFI shell icons will
  appear on the main menu. The /efi/{refind-path/apps/shell.efi filename,
  which was never officially documented but worked as a carryover from
  rEFIt, is no longer valid.

0.2.3 (3/26/2012):
------------------

- Fixed (maybe) a bug that caused hangs when launching a second program
  after returning from a first. There are some weird system-to-system
  differences, though, and this fix causes (apparently harmless) error
  messages about "(re)opening our installation volume" on at least one
  system (a 32-bit Mac Mini). I'm committing this change because, imperfect
  though it is, it's preferable to the earlier version, at least on my
  small sample of computers.

- Because of news that the Linux kernel developers are planning to use the
  filename linux.conf to hold Linux kernel configuration data for EFI
  booting, I'm transitioning rEFInd away from that name and to
  refind_linux.conf to avoid a conflict. This version can use either name,
  with refind_linux.conf taking precedence if both are present.

- Added logo for Arch Linux.

0.2.2 (3/23/2012):
------------------

- Fixed bug that caused program failure when Linux kernels with EFI stub
  support were detected with no associated version numbers. rEFInd now
  permits automatic linking of *ONE* versionless kernel to *ONE*
  versionless initrd file.

- Fixed bug that caused program hangs when a boot loader filename or label
  was too long. Such names are now properly truncated and program execution
  continues.

- Fixed bug that caused no text to appear in submenus on UEFI systems with
  small screens (800x600). NOTE: Problem still occurs on screens smaller
  than this, but such systems are very rare.

0.2.1 (3/19/2012):
------------------

- Added ability to set a "default_selection" that's a title or a substring
  of one -- the name given to a stanza in a "menuentry" or the boot
  loader's filename, in most cases, although "Mac OS X", "Windows XP
  (XoM)", and "Microsoft EFI boot" are also titles.

- Added support for semi-automatic scans of Linux kernels with EFI stub
  loader support. The program auto-detects matching initial RAM disk files
  and loads additional options from the "linux.conf" file in the same
  directory as the kernel.

- Added support for "submenuentry" keyword and associated sub-stanza
  entries in refind.conf file.

- Renamed icons/os_mint.icns to icons/os_linuxmint.icns to match the
  filename Linux Mint ACTUALLY uses for its ESP boot loader directory.


0.2.0 (3/14/2012):
------------------

- Initial public release
